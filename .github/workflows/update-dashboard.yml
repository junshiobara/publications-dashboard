name: Update Publications Dashboard

on:
  schedule:
    # ÊØéÊó•„Éë„É™ÊôÇÈñì7:00ÔºàUTC 5:00Ôºâ„Å´Ëá™ÂãïÂÆüË°å
    - cron: '0 5 * * *'
  workflow_dispatch:

jobs:
  crawl-and-update:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # 30ÂàÜ„Åß„Çø„Ç§„É†„Ç¢„Ç¶„ÉàÔºàÊ©üÈñ¢Êï∞„ÅåÂ§ö„ÅÑ„Åü„ÇÅÔºâ
    
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        pip install requests beautifulsoup4 pytz lxml feedparser
        
    - name: Run comprehensive crawler
      run: |
        python3 -c "
        import requests
        import json
        import re
        from datetime import datetime
        from bs4 import BeautifulSoup
        import pytz
        import time
        import sys
        import feedparser
        
        # „Éë„É™ÊôÇÈñìË®≠ÂÆö
        paris_tz = pytz.timezone('Europe/Paris')
        current_time = datetime.now(paris_tz).strftime('%Y-%m-%d %H:%M:%S („Éë„É™ÊôÇÈñì)')
        
        print(f'üöÄ „ÇØ„É≠„Éº„É™„É≥„Ç∞ÈñãÂßã: {current_time}')
        
        # ÂÆâÂÖ®„Å™„ÇØ„É≠„Éº„É™„É≥„Ç∞Ë®≠ÂÆö
        session = requests.Session()
        session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        })
        
        # Excel„Éï„Ç°„Ç§„É´„Å´Âü∫„Å•„ÅèÂÆåÂÖ®„Å™Ê©üÈñ¢„É™„Çπ„Éà
        institutions = [
            # „Ç§„Çø„É™„Ç¢‰∏≠Â§ÆÈäÄË°å
            {
                'name': 'Banca d\'Italia',
                'publications': [
                    {
                        'title': 'Financial Stability Report',
                        'url': 'https://www.bancaditalia.it/pubblicazioni/rapporto-stabilita/',
                        'search_terms': ['financial stability', 'rapporto stabilit√†', 'stability report']
                    },
                    {
                        'title': 'Macroeconomic Projections',
                        'url': 'https://www.bancaditalia.it/pubblicazioni/bollettino-economico/',
                        'search_terms': ['macroeconomic projections', 'proiezioni macroeconomiche', 'bollettino economico']
                    }
                ]
            },
            # „Çπ„Éö„Ç§„É≥‰∏≠Â§ÆÈäÄË°å
            {
                'name': 'Banco de Espa√±a',
                'publications': [
                    {
                        'title': 'Financial Stability Report',
                        'url': 'https://www.bde.es/bde/en/secciones/informes/Publicaciones_an/Informe_de_Estab/',
                        'search_terms': ['financial stability', 'estabilidad financiera', 'stability report']
                    },
                    {
                        'title': 'Macroeconomic Projections',
                        'url': 'https://www.bde.es/bde/en/secciones/informes/Publicaciones_an/Boletin_Economico/',
                        'search_terms': ['macroeconomic projections', 'proyecciones macroecon√≥micas']
                    }
                ]
            },
            # OECD
            {
                'name': 'OECD',
                'publications': [
                    {
                        'title': 'Economic Outlook',
                        'url': 'https://www.oecd.org/en/publications/oecd-economic-outlook-16097408.html',
                        'search_terms': ['economic outlook', 'interim economic outlook']
                    },
                    {
                        'title': 'Interim Economic Outlook',
                        'url': 'https://www.oecd.org/en/publications/',
                        'search_terms': ['interim economic outlook', 'economic outlook']
                    }
                ]
            },
            # Ê¨ßÂ∑ûÂßîÂì°‰ºö
            {
                'name': 'European Commission',
                'publications': [
                    {
                        'title': 'Economic Forecast',
                        'url': 'https://economy-finance.ec.europa.eu/economic-research-and-databases/economic-databases/economic-forecast_en',
                        'search_terms': ['economic forecast', 'spring forecast', 'autumn forecast']
                    },
                    {
                        'title': 'European Semester Spring Package',
                        'url': 'https://commission.europa.eu/business-economy-euro/economic-and-fiscal-policy-coordination/european-semester_en',
                        'search_terms': ['european semester', 'spring package', 'country specific recommendations']
                    },
                    {
                        'title': 'European Semester Autumn Package',
                        'url': 'https://commission.europa.eu/business-economy-euro/economic-and-fiscal-policy-coordination/european-semester_en',
                        'search_terms': ['european semester', 'autumn package', 'annual growth survey']
                    },
                    {
                        'title': 'Guidance on Fiscal Policy',
                        'url': 'https://economy-finance.ec.europa.eu/economic-and-fiscal-governance_en',
                        'search_terms': ['fiscal policy', 'fiscal guidance', 'stability and growth pact']
                    }
                ]
            },
            # „Éï„É©„É≥„Çπ‰∏≠Â§ÆÈäÄË°å
            {
                'name': 'Banque de France',
                'publications': [
                    {
                        'title': 'Financial Stability Report',
                        'url': 'https://www.banque-france.fr/en/publications-and-statistics/publications/financial-stability-report',
                        'search_terms': ['financial stability', 'rapport stabilit√© financi√®re']
                    },
                    {
                        'title': 'Macroeconomic Projections',
                        'url': 'https://www.banque-france.fr/en/publications-and-statistics/publications/macroeconomic-projections',
                        'search_terms': ['macroeconomic projections', 'projections macro√©conomiques']
                    }
                ]
            },
            # EBA
            {
                'name': 'EBA',
                'publications': [
                    {
                        'title': 'ESEP',
                        'url': 'https://www.eba.europa.eu/risk-analysis-and-data/european-supervisory-examination-programme-esep',
                        'search_terms': ['esep', 'european supervisory examination programme', 'supervisory examination']
                    },
                    {
                        'title': 'EU-wide Stress Test',
                        'url': 'https://www.eba.europa.eu/risk-analysis-and-data/eu-wide-stress-testing',
                        'search_terms': ['stress test', 'eu-wide stress test', 'banking stress test']
                    }
                ]
            },
            # IMF
            {
                'name': 'IMF',
                'publications': [
                    {
                        'title': 'World Economic Outlook',
                        'url': 'https://www.imf.org/en/Publications/WEO',
                        'search_terms': ['world economic outlook', 'weo', 'global growth']
                    },
                    {
                        'title': 'Global Financial Stability Report',
                        'url': 'https://www.imf.org/en/Publications/GFSR',
                        'search_terms': ['global financial stability', 'gfsr', 'financial stability']
                    },
                    {
                        'title': 'Fiscal Monitor',
                        'url': 'https://www.imf.org/en/Publications/FM',
                        'search_terms': ['fiscal monitor', 'public finances', 'fiscal policy']
                    }
                ]
            },
            # IEA
            {
                'name': 'IEA',
                'publications': [
                    {
                        'title': 'World Energy Outlook',
                        'url': 'https://www.iea.org/reports/world-energy-outlook-2024',
                        'search_terms': ['world energy outlook', 'weo', 'energy outlook']
                    },
                    {
                        'title': 'Global Energy Review',
                        'url': 'https://www.iea.org/reports/global-energy-review-2025',
                        'search_terms': ['global energy review', 'energy review', 'energy data']
                    }
                ]
            },
            # Ê†º‰ªò„ÅëÊ©üÈñ¢ - Moody's
            {
                'name': 'Moody\'s',
                'publications': [
                    {
                        'title': 'Sovereign Ratings (Portugal, Italy, Spain, France)',
                        'url': 'https://www.moodys.com/research-and-ratings/market-segment/sovereign-supranational/-/005005/005005/-/-1/0/-/0/-/-/-/-/-/-/en/global/rra',
                        'search_terms': ['sovereign rating', 'portugal', 'italy', 'spain', 'france', 'rating action']
                    }
                ]
            },
            # Ê†º‰ªò„ÅëÊ©üÈñ¢ - S&P
            {
                'name': 'S&P',
                'publications': [
                    {
                        'title': 'Sovereign Ratings (Portugal, Italy, Spain, France)',
                        'url': 'https://www.spglobal.com/ratings/en/research-insights/topics/sovereigns',
                        'search_terms': ['sovereign rating', 'portugal', 'italy', 'spain', 'france', 'rating action']
                    }
                ]
            },
            # Ê†º‰ªò„ÅëÊ©üÈñ¢ - Fitch
            {
                'name': 'Fitch',
                'publications': [
                    {
                        'title': 'Sovereign Ratings (Portugal, Italy, Spain, France)',
                        'url': 'https://www.fitchratings.com/research/sovereigns',
                        'search_terms': ['sovereign rating', 'portugal', 'italy', 'spain', 'france', 'rating action']
                    }
                ]
            }
        ]
        
        results = []
        success_count = 0
        total_pubs = sum(len(inst['publications']) for inst in institutions)
        
        print(f'üìä ÂêàË®à {len(institutions)} Ê©üÈñ¢„ÄÅ{total_pubs} ÂÖ¨Ë°®Áâ©„Çí„ÇØ„É≠„Éº„É™„É≥„Ç∞„Åó„Åæ„Åô')
        
        for inst in institutions:
            print(f'\\nüèõÔ∏è  {inst[\"name\"]} „Çí„ÇØ„É≠„Éº„É™„É≥„Ç∞‰∏≠...')
            
            for pub in inst['publications']:
                try:
                    print(f'  üìÑ {pub[\"title\"]} „ÇíÁ¢∫Ë™ç‰∏≠...')
                    
                    # „Çø„Ç§„É†„Ç¢„Ç¶„Éà‰ªò„Åç„É™„ÇØ„Ç®„Çπ„Éà
                    response = session.get(pub['url'], timeout=15)
                    
                    if response.status_code == 200:
                        soup = BeautifulSoup(response.content, 'html.parser')
                        
                        # Ê§úÁ¥¢Ë™û„Åß„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÁ¢∫Ë™ç
                        found_content = False
                        found_terms = []
                        for term in pub['search_terms']:
                            if term.lower() in response.text.lower():
                                found_content = True
                                found_terms.append(term)
                        
                        # ÊúÄÊñ∞„ÅÆÊó•‰ªò„ÇíÊé¢„Åô
                        date_pattern = r'20[2-9][0-9][-/][0-1][0-9][-/][0-3][0-9]'
                        dates = re.findall(date_pattern, response.text)
                        latest_date = max(dates) if dates else None
                        
                        results.append({
                            'institution': inst['name'],
                            'publication': pub['title'],
                            'url': pub['url'],
                            'status': '‚úÖ Êé•Á∂öÊàêÂäü' if found_content else '‚ö†Ô∏è „Ç≥„É≥„ÉÜ„É≥„ÉÑÊú™Á¢∫Ë™ç',
                            'found_terms': found_terms,
                            'latest_date_found': latest_date,
                            'crawled_at': current_time
                        })
                        
                        if found_content:
                            success_count += 1
                            print(f'    ‚úÖ ÊàêÂäü (Ê§úÂá∫Ë™û: {found_terms[:2]})')
                        else:
                            print(f'    ‚ö†Ô∏è  Êé•Á∂ö„ÅØ„Åß„Åç„Åü„ÅåÂÜÖÂÆπÊú™Á¢∫Ë™ç')
                    else:
                        results.append({
                            'institution': inst['name'],
                            'publication': pub['title'],
                            'url': pub['url'],
                            'status': f'‚ùå HTTP {response.status_code}',
                            'crawled_at': current_time
                        })
                        print(f'    ‚ùå Â§±Êïó: HTTP {response.status_code}')
                    
                    # „É¨„Éº„ÉàÂà∂ÈôêÔºöÂêÑ„É™„ÇØ„Ç®„Çπ„ÉàÈñì„Å´2ÁßíÂæÖÊ©ü
                    time.sleep(2)
                    
                except Exception as e:
                    results.append({
                        'institution': inst['name'],
                        'publication': pub['title'],
                        'url': pub['url'],
                        'status': f'‚ùå „Ç®„É©„Éº: {str(e)[:100]}',
                        'crawled_at': current_time
                    })
                    print(f'    ‚ùå „Ç®„É©„Éº: {e}')
                    continue
        
        # ÁµêÊûú‰øùÂ≠ò
        final_results = {
            'last_crawl': current_time,
            'total_institutions': len(institutions),
            'total_publications': total_pubs,
            'successful_crawls': success_count,
            'success_rate': f'{(success_count/total_pubs)*100:.1f}%',
            'results': results
        }
        
        with open('crawl_results.json', 'w', encoding='utf-8') as f:
            json.dump(final_results, f, ensure_ascii=False, indent=2)
        
        print(f'\\nüìä „ÇØ„É≠„Éº„É™„É≥„Ç∞ÂÆå‰∫Ü: {success_count}/{total_pubs} ÊàêÂäü ({(success_count/total_pubs)*100:.1f}%)')
        print(f'üìÅ ÁµêÊûú„ÅØ crawl_results.json „Å´‰øùÂ≠ò„Åï„Çå„Åæ„Åó„Åü')
        "
        
    - name: Update HTML dashboard
      run: |
        # HTML„Éï„Ç°„Ç§„É´„ÅÆÊúÄÁµÇÊõ¥Êñ∞ÊôÇÂàª„ÇíÊõ¥Êñ∞
        PARIS_TIME=$(TZ='Europe/Paris' date '+%Y-%m-%d %H:%M:%S („Éë„É™ÊôÇÈñì)')
        
        if [ -f "index.html" ]; then
          # „ÉÜ„É≥„Éó„É¨„Éº„ÉàÂ§âÊï∞„ÇíÁΩÆÊèõ
          sed -i "s/{{LAST_UPDATE_TIME}}/$PARIS_TIME/g" index.html
          
          # Êó¢Â≠ò„ÅÆÊõ¥Êñ∞ÊôÇÂàª„ÇÇÁΩÆÊèõ
          sed -i "s/ÊúÄÁµÇÊõ¥Êñ∞: [^<]*/ÊúÄÁµÇÊõ¥Êñ∞: $PARIS_TIME/g" index.html
          
          echo "‚úÖ HTML„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„ÉâÊõ¥Êñ∞ÂÆå‰∫Ü: $PARIS_TIME"
        else
          echo "‚ùå index.html „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì"
        fi
        
    - name: Generate detailed report
      run: |
        # „ÇØ„É≠„Éº„É™„É≥„Ç∞ÁµêÊûú„Åã„ÇâË©≥Á¥∞„É¨„Éù„Éº„Éà„ÇíÁîüÊàê
        python3 -c "
        import json
        from datetime import datetime
        
        try:
            with open('crawl_results.json', 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            print('\\nüìä Ë©≥Á¥∞„É¨„Éù„Éº„Éà')
            print(f'ÊúÄÁµÇÂÆüË°å: {data[\"last_crawl\"]}')
            print(f'ÊàêÂäüÁéá: {data.get(\"success_rate\", \"N/A\")}')
            print(f'Á∑èÊ©üÈñ¢Êï∞: {data[\"total_institutions\"]}')
            print(f'Á∑èÂÖ¨Ë°®Áâ©Êï∞: {data[\"total_publications\"]}')
            print(f'ÊàêÂäüÊï∞: {data[\"successful_crawls\"]}')
            
            print('\\nüìã Ê©üÈñ¢Âà•ÁµêÊûú:')
            institutions = {}
            for result in data['results']:
                inst = result['institution']
                if inst not in institutions:
                    institutions[inst] = {'success': 0, 'total': 0}
                institutions[inst]['total'] += 1
                if '‚úÖ' in result['status']:
                    institutions[inst]['success'] += 1
            
            for inst, stats in institutions.items():
                rate = (stats['success']/stats['total'])*100
                print(f'  {inst}: {stats[\"success\"]}/{stats[\"total\"]} ({rate:.0f}%)')
            
        except Exception as e:
            print(f'„É¨„Éù„Éº„ÉàÁîüÊàê„Ç®„É©„Éº: {e}')
        "
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        
        # Â§âÊõ¥„Åå„ÅÇ„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
        if [ -n "$(git status --porcelain)" ]; then
          git add index.html crawl_results.json
          git commit -m "ü§ñ Ëá™ÂãïÊõ¥Êñ∞: $(TZ='Europe/Paris' date '+%Y-%m-%d %H:%M') | $(cat crawl_results.json | jq -r '.success_rate // \"N/A\"') ÊàêÂäüÁéá"
          git push
          echo "‚úÖ Â§âÊõ¥„Çí„Éó„ÉÉ„Ç∑„É•„Åó„Åæ„Åó„Åü"
        else
          echo "‚ÑπÔ∏è Â§âÊõ¥„Åå„Å™„ÅÑ„Åü„ÇÅ„Ç≥„Éü„ÉÉ„Éà„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Åæ„Åó„Åü"
        fi
