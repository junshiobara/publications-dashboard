# IEA
            {
                'name': 'IEA',
                'publications': [
                    {
                        'title': 'World Energy Outlook',
                        'urls': [
                            'https://www.iea.org/reports/world-energy-outlook-2024',
                            'https://www.iea.org/analysis?type=report',
                            'https://www.ieaname: Update Publications Dashboard

on:
  schedule:
    # ÊØéÊó•„Éë„É™ÊôÇÈñì7:00ÔºàUTC 5:00Ôºâ„Å´Ëá™ÂãïÂÆüË°å
    - cron: '0 5 * * *'
  workflow_dispatch:

jobs:
  crawl-and-update:
    runs-on: ubuntu-latest
    timeout-minutes: 45  # „Çà„ÇäÈï∑„ÇÅ„ÅÆ„Çø„Ç§„É†„Ç¢„Ç¶„Éà
    
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        pip install requests beautifulsoup4 pytz lxml feedparser dateparser
        
    - name: Run enhanced crawler
      run: |
        python3 -c "
        import requests
        import json
        import re
        from datetime import datetime, timedelta
        from bs4 import BeautifulSoup
        import pytz
        import time
        import sys
        import dateparser
        
        # „Éë„É™ÊôÇÈñìË®≠ÂÆö
        paris_tz = pytz.timezone('Europe/Paris')
        current_time = datetime.now(paris_tz).strftime('%Y-%m-%d %H:%M:%S („Éë„É™ÊôÇÈñì)')
        
        print(f'üöÄ ÊîπËâØÁâà„ÇØ„É≠„Éº„É™„É≥„Ç∞ÈñãÂßã: {current_time}')
        
        # ÂÆâÂÖ®„Å™„ÇØ„É≠„Éº„É™„É≥„Ç∞Ë®≠ÂÆö
        session = requests.Session()
        session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
            'Accept-Language': 'en-US,en;q=0.9',
            'Accept-Encoding': 'gzip, deflate, br',
            'Connection': 'keep-alive',
            'Upgrade-Insecure-Requests': '1',
            'Sec-Fetch-Dest': 'document',
            'Sec-Fetch-Mode': 'navigate',
            'Sec-Fetch-Site': 'none',
            'Cache-Control': 'max-age=0'
        })
        
        def try_multiple_urls(urls, title, institution):
            '''Ë§áÊï∞„ÅÆURL„ÇíË©¶„Åô'''
            for url in urls:
                try:
                    print(f'    üîó Ë©¶Ë°å‰∏≠: {url}')
                    response = session.get(url, timeout=20)
                    if response.status_code == 200:
                        print(f'    ‚úÖ ÊàêÂäü: {url}')
                        return response, url
                    else:
                        print(f'    ‚ùå HTTP {response.status_code}: {url}')
                except Exception as e:
                    print(f'    ‚ùå „Ç®„É©„Éº {url}: {str(e)[:50]}')
                    continue
            return None, None
        
        def extract_dates_enhanced(text, soup):
            '''Âº∑Âåñ„Åï„Çå„ÅüÊó•‰ªòÊäΩÂá∫'''
            dates = []
            
            # Ë§áÊï∞„ÅÆÊó•‰ªò„Éë„Çø„Éº„É≥
            patterns = [
                r'20[2-9][0-9][-/\.][0-1]?[0-9][-/\.][0-3]?[0-9]',  # 2025-06-24, 2025/6/24
                r'[0-3]?[0-9][-/\.][0-1]?[0-9][-/\.]20[2-9][0-9]',   # 24-06-2025, 24/6/2025
                r'[A-Za-z]+ [0-3]?[0-9], 20[2-9][0-9]',             # June 24, 2025
                r'[0-3]?[0-9] [A-Za-z]+ 20[2-9][0-9]',              # 24 June 2025
                r'20[2-9][0-9]Âπ¥[0-1]?[0-9]Êúà[0-3]?[0-9]Êó•'          # 2025Âπ¥6Êúà24Êó•
            ]
            
            for pattern in patterns:
                found = re.findall(pattern, text)
                dates.extend(found)
            
            # HTML„Åã„ÇâÁâπÂÆö„ÅÆ„Çø„Ç∞„ÅÆÊó•‰ªò„ÇÇÊäΩÂá∫
            if soup:
                for tag in soup.find_all(['time', 'span', 'div'], class_=re.compile(r'date|time|publish', re.I)):
                    if tag.get_text():
                        dates.append(tag.get_text().strip())
            
            # ÈáçË§áÈô§Âéª„Å®ÊúÄÊñ∞Êó•‰ªòÈÅ∏Êäû
            if dates:
                valid_dates = []
                for d in dates:
                    try:
                        parsed = dateparser.parse(d)
                        if parsed and parsed.year >= 2020:
                            valid_dates.append(parsed)
                    except:
                        continue
                
                if valid_dates:
                    latest = max(valid_dates)
                    return latest.strftime('%Y-%m-%d')
            
            return None
        
        # Ê≠£Á¢∫„ÅßÁèæÂÆüÁöÑ„Å™Ê©üÈñ¢„É™„Çπ„Éà
        institutions = [
            # „Ç§„Çø„É™„Ç¢‰∏≠Â§ÆÈäÄË°å
            {
                'name': 'Banca d\'Italia',
                'publications': [
                    {
                        'title': 'Financial Stability Report',
                        'urls': [
                            'https://www.bancaditalia.it/pubblicazioni/rapporto-stabilita/index.html',
                            'https://www.bancaditalia.it/en/publications/financial-stability-report/',
                            'https://www.bancaditalia.it/pubblicazioni/rapporto-stabilita/'
                        ],
                        'search_terms': ['financial stability', 'rapporto stabilit√† finanziaria', 'stabilit√†', 'rischio sistemico']
                    },
                    {
                        'title': 'Macroeconomic Projections',
                        'urls': [
                            'https://www.bancaditalia.it/pubblicazioni/bollettino-economico/index.html',
                            'https://www.bancaditalia.it/en/publications/economic-bulletin/',
                            'https://www.bancaditalia.it/pubblicazioni/bollettino-economico/'
                        ],
                        'search_terms': ['bollettino economico', 'previsioni macroeconomiche', 'proiezioni', 'economic bulletin']
                    }
                ]
            },
            # „Çπ„Éö„Ç§„É≥‰∏≠Â§ÆÈäÄË°å
            {
                'name': 'Banco de Espa√±a',
                'publications': [
                    {
                        'title': 'Financial Stability Report',
                        'urls': [
                            'https://www.bde.es/bde/en/secciones/informes/Publicaciones_an/Informe_de_Estab/',
                            'https://www.bde.es/wbe/en/publicaciones/informes/informe-estabilidad-financiera/',
                            'https://www.bde.es/wbe/es/publicaciones/informes/informe-estabilidad-financiera/'
                        ],
                        'search_terms': ['financial stability', 'estabilidad financiera', 'informe de estabilidad', 'IEF']
                    },
                    {
                        'title': 'Macroeconomic Projections',
                        'urls': [
                            'https://www.bde.es/bde/en/secciones/informes/Publicaciones_an/Boletin_Economico/',
                            'https://www.bde.es/wbe/en/publicaciones/informes/boletin-economico/',
                            'https://www.bde.es/wbe/es/publicaciones/informes/boletin-economico/'
                        ],
                        'search_terms': ['macroeconomic projections', 'proyecciones macroecon√≥micas', 'bolet√≠n econ√≥mico']
                    }
                ]
            },
            # OECD
            {
                'name': 'OECD',
                'publications': [
                    {
                        'title': 'Economic Outlook',
                        'urls': [
                            'https://www.oecd.org/en/publications/serials/oecd-economic-outlook_g1ghgh13.html',
                            'https://www.oecd.org/en/topics/economic-outlook.html',
                            'https://www.oecd.org/economic-outlook/'
                        ],
                        'search_terms': ['economic outlook', 'latest publications', 'growth projections', 'global economy']
                    },
                    {
                        'title': 'Interim Economic Outlook',
                        'urls': [
                            'https://www.oecd.org/en/publications/serials/oecd-economic-outlook_g1ghgh13.html',
                            'https://www.oecd.org/en/publications/oecd-economic-outlook-interim-report-march-2025_89af4857-en.html',
                            'https://www.oecd.org/en/topics/economic-outlook.html'
                        ],
                        'search_terms': ['interim economic outlook', 'latest publications', 'interim outlook', 'march 2025']
                    }
                ]
            },
            # Ê¨ßÂ∑ûÂßîÂì°‰ºö
            {
                'name': 'European Commission',
                'publications': [
                    {
                        'title': 'Economic Forecast',
                        'urls': [
                            'https://economy-finance.ec.europa.eu/economic-forecast-and-surveys/economic-forecasts_en',
                            'https://ec.europa.eu/economy_finance/eu/forecasts/index_en.htm',
                            'https://economy-finance.ec.europa.eu/'
                        ],
                        'search_terms': ['economic forecast', 'spring forecast', 'autumn forecast', 'winter forecast']
                    },
                    {
                        'title': 'European Semester',
                        'urls': [
                            'https://commission.europa.eu/business-economy-euro/economic-and-fiscal-policy-coordination/european-semester_en',
                            'https://ec.europa.eu/eurostat/web/european-semester/',
                            'https://economy-finance.ec.europa.eu/economic-and-fiscal-governance/european-semester_en'
                        ],
                        'search_terms': ['european semester', 'country specific recommendations', 'spring package', 'autumn package']
                    }
                ]
            },
            # „Éï„É©„É≥„Çπ‰∏≠Â§ÆÈäÄË°å
            {
                'name': 'Banque de France',
                'publications': [
                    {
                        'title': 'Financial Stability Report',
                        'urls': [
                            'https://www.banque-france.fr/en/financial-stability',
                            'https://www.banque-france.fr/en/publications/financial-stability-report',
                            'https://www.banque-france.fr/stabilite-financiere'
                        ],
                        'search_terms': ['financial stability', 'stabilit√© financi√®re', 'rapport stabilit√©']
                    },
                    {
                        'title': 'Macroeconomic Projections',
                        'urls': [
                            'https://www.banque-france.fr/en/economics/macroeconomic-projections',
                            'https://www.banque-france.fr/economie/projections-macroeconomiques',
                            'https://www.banque-france.fr/en/publications'
                        ],
                        'search_terms': ['macroeconomic projections', 'projections macro√©conomiques', 'pr√©visions']
                    }
                ]
            },
            # EBA
            {
                'name': 'EBA',
                'publications': [
                    {
                        'title': 'ESEP',
                        'urls': [
                            'https://www.eba.europa.eu/supervisory-convergence/supervisory-examination-programme',
                            'https://www.eba.europa.eu/about-us/work-programme',
                            'https://www.eba.europa.eu/publications'
                        ],
                        'search_terms': ['supervisory examination programme', 'esep', 'supervisory priorities']
                    },
                    {
                        'title': 'EU-wide Stress Test',
                        'urls': [
                            'https://www.eba.europa.eu/risk-analysis-and-data/eu-wide-stress-testing',
                            'https://www.eba.europa.eu/risk-analysis-and-data/stress-testing',
                            'https://www.eba.europa.eu/publications/stress-test-results'
                        ],
                        'search_terms': ['stress test', 'eu-wide stress test', 'stress testing exercise']
                    }
                ]
            },
            # IMF
            {
                'name': 'IMF',
                'publications': [
                    {
                        'title': 'World Economic Outlook',
                        'urls': [
                            'https://www.imf.org/en/Publications/WEO/Issues/2025/04/22/world-economic-outlook-april-2025',
                            'https://www.imf.org/en/Publications/WEO',
                            'https://www.imf.org/en/Research/outlook/weo'
                        ],
                        'search_terms': ['world economic outlook', 'weo', 'global growth forecast', 'april 2025']
                    },
                    {
                        'title': 'Global Financial Stability Report',
                        'urls': [
                            'https://www.imf.org/en/Publications/GFSR',
                            'https://www.imf.org/en/Research/Publications/GFSR',
                            'https://www.imf.org/external/pubs/ft/gfsr/'
                        ],
                        'search_terms': ['global financial stability', 'gfsr', 'financial stability report']
                    },
                    {
                        'title': 'Fiscal Monitor',
                        'urls': [
                            'https://www.imf.org/en/Publications/FM',
                            'https://www.imf.org/en/Research/Publications/FM',
                            'https://www.imf.org/external/pubs/ft/fm/'
                        ],
                        'search_terms': ['fiscal monitor', 'public debt', 'fiscal policy']
                    }
                ]
            },
            # IEA
            {
                'name': 'IEA',
                'publications': [
                    {
                        'title': 'World Energy Outlook',
                        'urls': [
                            'https://www.iea.org/analysis?type=report',
                            'https://www.iea.org/reports/world-energy-outlook-2024',
                            'https://www.iea.org/weo'
                        ],
                        'search_terms': ['world energy outlook', 'weo', 'energy scenarios', 'age of electricity', '2024']
                    },
                    {
                        'title': 'Global Energy Review',
                        'urls': [
                            'https://www.iea.org/analysis?type=report',
                            'https://www.iea.org/reports/global-energy-review-2025',
                            'https://www.iea.org/reports/global-energy-review'
                        ],
                        'search_terms': ['global energy review', 'energy statistics', 'co2 emissions', 'energy data', '2025']
                    }
                ]
            },
            # Ê†º‰ªò„ÅëÊ©üÈñ¢ÔºàÁ∞°ÊòìÁâàÔºâ
            {
                'name': 'Moody\'s',
                'publications': [
                    {
                        'title': 'Sovereign Ratings',
                        'urls': [
                            'https://www.moodys.com/research/sovereigns',
                            'https://www.moodys.com/research-and-ratings/sovereigns'
                        ],
                        'search_terms': ['sovereign', 'rating', 'portugal', 'italy', 'spain', 'france']
                    }
                ]
            },
            {
                'name': 'S&P',
                'publications': [
                    {
                        'title': 'Sovereign Ratings',
                        'urls': [
                            'https://www.spglobal.com/ratings/en/research-insights/sovereigns',
                            'https://www.spglobal.com/ratings/en/sector/governments/sovereigns'
                        ],
                        'search_terms': ['sovereign', 'rating', 'portugal', 'italy', 'spain', 'france']
                    }
                ]
            },
            {
                'name': 'Fitch',
                'publications': [
                    {
                        'title': 'Sovereign Ratings',
                        'urls': [
                            'https://www.fitchratings.com/sovereigns',
                            'https://www.fitchratings.com/research/sovereigns'
                        ],
                        'search_terms': ['sovereign', 'rating', 'portugal', 'italy', 'spain', 'france']
                    }
                ]
            }
        ]
        
        results = []
        success_count = 0
        total_pubs = sum(len(inst['publications']) for inst in institutions)
        
        print(f'üìä ÂêàË®à {len(institutions)} Ê©üÈñ¢„ÄÅ{total_pubs} ÂÖ¨Ë°®Áâ©„Çí„ÇØ„É≠„Éº„É™„É≥„Ç∞„Åó„Åæ„Åô')
        
        for inst in institutions:
            print(f'\\nüèõÔ∏è  {inst[\"name\"]} „Çí„ÇØ„É≠„Éº„É™„É≥„Ç∞‰∏≠...')
            
            for pub in inst['publications']:
                print(f'  üìÑ {pub[\"title\"]} „ÇíÁ¢∫Ë™ç‰∏≠...')
                
                # Ë§áÊï∞URL„ÇíË©¶Ë°å
                response, successful_url = try_multiple_urls(pub['urls'], pub['title'], inst['name'])
                
                if response:
                    try:
                        soup = BeautifulSoup(response.content, 'html.parser')
                        
                        # Ê§úÁ¥¢Ë™û„Åß„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÁ¢∫Ë™ç
                        found_content = False
                        found_terms = []
                        text_content = response.text.lower()
                        
                        for term in pub['search_terms']:
                            if term.lower() in text_content:
                                found_content = True
                                found_terms.append(term)
                        
                        # Âº∑Âåñ„Åï„Çå„ÅüÊó•‰ªòÊäΩÂá∫
                        latest_date = extract_dates_enhanced(response.text, soup)
                        
                        results.append({
                            'institution': inst['name'],
                            'publication': pub['title'],
                            'url': successful_url,
                            'status': '‚úÖ Êé•Á∂öÊàêÂäü' if found_content else '‚ö†Ô∏è „Ç≥„É≥„ÉÜ„É≥„ÉÑÊú™Á¢∫Ë™ç',
                            'found_terms': found_terms[:3],  # ÊúÄÂàù„ÅÆ3„Å§„Åæ„Åß
                            'latest_date_found': latest_date,
                            'crawled_at': current_time
                        })
                        
                        if found_content:
                            success_count += 1
                            print(f'    ‚úÖ ÊàêÂäü (Ê§úÂá∫Ë™û: {found_terms[:2]}) | ÊúÄÊñ∞Êó•‰ªò: {latest_date or \"„Å™„Åó\"}')
                        else:
                            print(f'    ‚ö†Ô∏è  Êé•Á∂ö„ÅØ„Åß„Åç„Åü„ÅåÂÜÖÂÆπÊú™Á¢∫Ë™ç | ÊúÄÊñ∞Êó•‰ªò: {latest_date or \"„Å™„Åó\"}')
                    
                    except Exception as e:
                        results.append({
                            'institution': inst['name'],
                            'publication': pub['title'],
                            'url': successful_url,
                            'status': f'‚ùå Ëß£Êûê„Ç®„É©„Éº: {str(e)[:50]}',
                            'crawled_at': current_time
                        })
                        print(f'    ‚ùå Ëß£Êûê„Ç®„É©„Éº: {e}')
                else:
                    results.append({
                        'institution': inst['name'],
                        'publication': pub['title'],
                        'url': pub['urls'][0],
                        'status': '‚ùå ÂÖ®URL„ÅßÊé•Á∂öÂ§±Êïó',
                        'crawled_at': current_time
                    })
                    print(f'    ‚ùå ÂÖ®URL„ÅßÊé•Á∂öÂ§±Êïó')
                
                # „É¨„Éº„ÉàÂà∂ÈôêÔºöÂêÑ„É™„ÇØ„Ç®„Çπ„ÉàÈñì„Å´3ÁßíÂæÖÊ©ü
                time.sleep(3)
        
        # ÁµêÊûú‰øùÂ≠ò
        final_results = {
            'last_crawl': current_time,
            'total_institutions': len(institutions),
            'total_publications': total_pubs,
            'successful_crawls': success_count,
            'success_rate': f'{(success_count/total_pubs)*100:.1f}%',
            'results': results
        }
        
        with open('crawl_results.json', 'w', encoding='utf-8') as f:
            json.dump(final_results, f, ensure_ascii=False, indent=2)
        
        print(f'\\nüìä „ÇØ„É≠„Éº„É™„É≥„Ç∞ÂÆå‰∫Ü: {success_count}/{total_pubs} ÊàêÂäü ({(success_count/total_pubs)*100:.1f}%)')
        print(f'üìÅ ÁµêÊûú„ÅØ crawl_results.json „Å´‰øùÂ≠ò„Åï„Çå„Åæ„Åó„Åü')
        "
        
    - name: Update HTML dashboard
      run: |
        # HTML„Éï„Ç°„Ç§„É´„ÅÆÊúÄÁµÇÊõ¥Êñ∞ÊôÇÂàª„ÇíÊõ¥Êñ∞
        PARIS_TIME=$(TZ='Europe/Paris' date '+%Y-%m-%d %H:%M:%S („Éë„É™ÊôÇÈñì)')
        
        if [ -f "index.html" ]; then
          # „ÉÜ„É≥„Éó„É¨„Éº„ÉàÂ§âÊï∞„ÇíÁΩÆÊèõ
          sed -i "s/{{LAST_UPDATE_TIME}}/$PARIS_TIME/g" index.html
          
          # Êó¢Â≠ò„ÅÆÊõ¥Êñ∞ÊôÇÂàª„ÇÇÁΩÆÊèõ
          sed -i "s/ÊúÄÁµÇÊõ¥Êñ∞: [^<]*/ÊúÄÁµÇÊõ¥Êñ∞: $PARIS_TIME/g" index.html
          
          echo "‚úÖ HTML„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„ÉâÊõ¥Êñ∞ÂÆå‰∫Ü: $PARIS_TIME"
        else
          echo "‚ùå index.html „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì"
        fi
        
    - name: Generate enhanced report
      run: |
        # „ÇØ„É≠„Éº„É™„É≥„Ç∞ÁµêÊûú„Åã„ÇâË©≥Á¥∞„É¨„Éù„Éº„Éà„ÇíÁîüÊàê
        python3 -c "
        import json
        from datetime import datetime
        
        try:
            with open('crawl_results.json', 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            print('\\nüìä ÊîπËâØÁâà„ÇØ„É≠„Éº„É™„É≥„Ç∞ÁµêÊûú„É¨„Éù„Éº„Éà')
            print('=' * 50)
            print(f'ÊúÄÁµÇÂÆüË°å: {data[\"last_crawl\"]}')
            print(f'ÊàêÂäüÁéá: {data.get(\"success_rate\", \"N/A\")}')
            print(f'Á∑èÊ©üÈñ¢Êï∞: {data[\"total_institutions\"]}')
            print(f'Á∑èÂÖ¨Ë°®Áâ©Êï∞: {data[\"total_publications\"]}')
            print(f'ÊàêÂäüÊï∞: {data[\"successful_crawls\"]}')
            
            print('\\nüìã Ê©üÈñ¢Âà•ÁµêÊûú:')
            institutions = {}
            for result in data['results']:
                inst = result['institution']
                if inst not in institutions:
                    institutions[inst] = {'success': 0, 'total': 0, 'details': []}
                institutions[inst]['total'] += 1
                institutions[inst]['details'].append({
                    'pub': result['publication'],
                    'status': result['status'],
                    'date': result.get('latest_date_found')
                })
                if '‚úÖ' in result['status']:
                    institutions[inst]['success'] += 1
            
            for inst, stats in institutions.items():
                rate = (stats['success']/stats['total'])*100
                print(f'\\n  üèõÔ∏è  {inst}: {stats[\"success\"]}/{stats[\"total\"]} ({rate:.0f}%)')
                for detail in stats['details']:
                    status_icon = '‚úÖ' if '‚úÖ' in detail['status'] else '‚ùå' if '‚ùå' in detail['status'] else '‚ö†Ô∏è'
                    date_info = f' | {detail[\"date\"]}' if detail['date'] else ''
                    print(f'    {status_icon} {detail[\"pub\"]}{date_info}')
            
            # ÊúÄÊñ∞Êó•‰ªò„ÅÆ„ÅÇ„Çã„ÇÇ„ÅÆ
            print('\\nüìÖ ÊúÄÊñ∞Êó•‰ªò„ÅåÊ§úÂá∫„Åï„Çå„ÅüÂÖ¨Ë°®Áâ©:')
            recent_pubs = [r for r in data['results'] if r.get('latest_date_found')]
            recent_pubs.sort(key=lambda x: x.get('latest_date_found', ''), reverse=True)
            for pub in recent_pubs[:10]:
                print(f'  üìÑ {pub[\"institution\"]} - {pub[\"publication\"]}: {pub[\"latest_date_found\"]}')
            
        except Exception as e:
            print(f'„É¨„Éù„Éº„ÉàÁîüÊàê„Ç®„É©„Éº: {e}')
        "
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        
        # Â§âÊõ¥„Åå„ÅÇ„Çã„Åã„ÉÅ„Çß„ÉÉ„ÇØ
        if [ -n "$(git status --porcelain)" ]; then
          PARIS_TIME=$(TZ='Europe/Paris' date '+%Y-%m-%d %H:%M')
          SUCCESS_RATE=$(cat crawl_results.json | jq -r '.success_rate // "N/A"')
          git add index.html crawl_results.json
          git commit -m "ü§ñ ÊîπËâØÁâàËá™ÂãïÊõ¥Êñ∞: ${PARIS_TIME} | ${SUCCESS_RATE} ÊàêÂäüÁéá"
          git push
          echo "‚úÖ Â§âÊõ¥„Çí„Éó„ÉÉ„Ç∑„É•„Åó„Åæ„Åó„Åü"
        else
          echo "‚ÑπÔ∏è Â§âÊõ¥„Åå„Å™„ÅÑ„Åü„ÇÅ„Ç≥„Éü„ÉÉ„Éà„Çí„Çπ„Ç≠„ÉÉ„Éó„Åó„Åæ„Åó„Åü"
        fi
